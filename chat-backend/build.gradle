plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
    id 'com.google.protobuf' version '0.9.5'
}

repositories {
    mavenLocal()
    maven { url "https://packages.confluent.io/maven/" }
}

group = 'org.example.chatservice'
version = '0.0.1-SNAPSHOT'
description = 'chat-backend'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation('org.springframework.boot:spring-boot-starter-websocket')
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.awaitility:awaitility:4.2.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // https://mvnrepository.com/artifact/org.springframework/spring-web
    implementation("org.springframework.boot:spring-boot-starter-web")
    // https://mvnrepository.com/artifact/io.confluent/kafka-protobuf-serializer
    implementation("io.confluent:kafka-protobuf-serializer:8.0.0")
    implementation ('com.google.protobuf:protobuf-java:3.23.4')

    implementation('com.squareup.wire:wire-runtime:4.4.1')

    implementation('com.scylladb:scylla-driver-core:3.11.5.9')
    implementation('com.scylladb:java-driver-query-builder:4.19.0.1')
}

tasks.named('bootBuildImage') {
	runImage = 'paketobuildpacks/ubuntu-noble-run-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.23.4"
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    outputSubDir = 'java'
                }
            }
        }
    }
}

sourceSets {
    main {
        proto {
            srcDirs '../proto'
        }
    }
}

tasks.named('processResources') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    exclude '**/*.proto'
}
